# roles/cluster/tasks/06_install_cni_kubeovn.yml
#- name: 等待 kube-system 命名空间就绪
#  kubernetes.core.k8s:
#    api_version: v1
#    kind: Namespace
#    name: kube-system
#    state: present
#  register: ns_ready
#  until: ns_ready is succeeded
#  retries: 10
#  delay: 5

- name: 创建临时目录存放 kube-ovn 安装脚本
  ansible.builtin.file:
    path: "/tmp/kube-ovn"
    state: directory
    mode: '0755'
  when: is_worker == 1

- name: 复制本地 kube-ovn 安装脚本（v1.13.15）到目标节点
  ansible.builtin.copy:
    src: "files/install_kube_ovn.sh"  # 使用本地files目录中的离线脚本
    dest: "/tmp/kube-ovn/install.sh"
    mode: '0755'
  when: is_worker == 1

- name: 复制 kube-ovn 镜像文件到临时目录
  copy:
    src: "{{ playbook_dir }}/images/kube-ovn-v1.13.15.tar"
    dest: "/tmp/kube-ovn-v1.13.15.tar"
    mode: 0644
  when: is_worker == 1

- name: 加载 kube-ovn 镜像到Docker
  shell: "docker load -i /tmp/kube-ovn-v1.13.15.tar"
  when: is_worker == 1

- name: 离线安装 kube-ovn v1.13.8（仅在初始化节点执行）
  ansible.builtin.command: >
    /tmp/kube-ovn/install.sh
  register: ovn_install_result
  when: is_worker == 1

- name: 打印 kube-ovn 安装输出
  ansible.builtin.debug:
    msg: "{{ ovn_install_result.stdout_lines }}"
  when: is_worker == 1

#- name: 等待 kube-ovn 命名空间创建
#  kubernetes.core.k8s:
#    api_version: v1
#    kind: Namespace
#    name: kube-ovn
#    state: present
#  register: ovn_ns_ready
#  until: ovn_ns_ready is succeeded
#  retries: 10
#  delay: 5
#  when: inventory_hostname == groups['k8s'] | selectattr('is_init', 'equalto', 1) | list | first

#- name: 等待 kube-ovn 核心组件就绪（最多等待 5 分钟）
#  kubernetes.core.k8s_info:
#    kind: Pod
#    namespace: kube-ovn
#    label_selectors:
#      - app.kubernetes.io/name=kube-ovn
#  register: ovn_pods
#  until:
#    - ovn_pods.resources | length > 0
#    - ovn_pods.resources | json_query('[?status.phase != `Running`]') | length == 0
#  retries: 30
#  delay: 10
#  when: inventory_hostname == groups['k8s'] | selectattr('is_init', 'equalto', 1) | list | first

- name: 验证 kube-ovn 网络插件状态
  ansible.builtin.command: kubectl get pods -n kube-ovn
  register: ovn_status
  when: is_worker == 1

- name: 打印 kube-ovn 部署结果
  ansible.builtin.debug:
    msg: "{{ ovn_status.stdout_lines }}"
  when: is_worker == 1
